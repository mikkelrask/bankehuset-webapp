{"version":3,"file":"component---src-pages-index-js-2703b85ae725fb60c6f9.js","mappings":"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","sources":["webpack://bankehuset/./src/services/entries.js","webpack://bankehuset/./src/components/EntriesList/EntriesList.jsx","webpack://bankehuset/./src/pages/index.js"],"sourcesContent":["/**\n* Services -> Entries\n */\n\nimport base from './base';\n\nconst entriesService = base.injectEndpoints({\n  endpoints: (builder) => ({\n    getEntries: builder.query({\n      query: ({ perPage, page }) => ({\n        method: 'GET',\n        url: `entries?perPage=${perPage}&page=${page}`,\n      })\n    })\n  })\n})\n\nexport const {\n  useGetEntriesQuery\n} = entriesService;","\nimport React, { useState } from 'react';\nimport { createStyles, Table, ScrollArea, Button } from '@mantine/core';\nimport { format } from 'date-fns';\n\nconst Weather = (data) => {\n  const [show, setShow] = useState(false);\n\n  if (!data) {\n    return null;\n  }\n\n  if (!show) {\n    return <Button style={{padding: '5px', margin: '0 -5px'}} variant=\"subtle\" onClick={() => setShow(true)}>Show weather data</Button>\n  }\n\n  return (\n    <>\n      <Button style={{padding: '5px', margin: '0 -5px'}} variant=\"subtle\" onClick={() => setShow(false)}>Hide weather data</Button>\n      <br />\n      <pre>{JSON.stringify(data, null, 4)}</pre>\n    </>\n  )\n}\n\nconst useStyles = createStyles((theme) => ({\n  header: {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n    transition: 'box-shadow 150ms ease',\n\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      bottom: 0,\n      borderBottom: `1px solid ${\n        theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[2]\n      }`,\n    },\n  },\n\n  scrolled: {\n    boxShadow: theme.shadows.sm,\n  },\n}));\n\nconst EntriesList = ({ data }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = data.map((row) => (\n    <tr key={row._id}>\n      <td style={{ verticalAlign: 'top' }}>{format(new Date(row.createdAt), 'dd/MM/yyyy HH:mm')}</td>\n      <td style={{ verticalAlign: 'top' }}>{row.temperature}</td>\n      <td style={{ verticalAlign: 'top' }}>\n        <Weather data={row.data} />\n      </td>\n    </tr>\n  ));\n\n  return (\n    <ScrollArea onScrollPositionChange={({ y }) => setScrolled(y !== 0)}>\n      <Table sx={{ minWidth: 700, maxWidth: 1000 }}>\n        <thead className={cx(classes.header, { [classes.scrolled]: scrolled })}>\n          <tr>\n            <th>Timestamp</th>\n            <th>Temperture</th>\n            <th>Weather</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n\nexport default EntriesList;","import React, { useState } from 'react';\nimport { Button } from '@mantine/core';\nimport  { useGetEntriesQuery } from \"../services/entries\";\nimport EntriesList from \"../components/EntriesList\";\n\nconst Home = () => {\n  const [page, setPage] = useState(1);\n  const [perPage] = useState(250);\n\n  const {\n    data,\n    isLoading\n  } = useGetEntriesQuery({\n    page,\n    perPage,\n  }, {\n    refetchOnMountOrArgChange: true\n  });\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!data) {\n    return <div>No data yet</div>\n  }\n\n  return (\n    <div>\n      <EntriesList data={data.data ?? []} />\n      <br /><br />\n      {page > 1 ? <Button onClick={() => setPage(curr => curr - 1)}>Newer</Button> : null}{' '}\n      {data.data.length >= perPage ? <Button onClick={() => setPage(curr => curr + 1)}>Older</Button> : null}\n    </div>\n  )\n}\n\nexport default Home;\n"],"names":["useGetEntriesQuery","base","endpoints","builder","getEntries","query","method","url","perPage","page","Weather","data","useState","show","setShow","Button","style","padding","margin","variant","onClick","JSON","stringify","useStyles","createStyles","theme","header","position","top","backgroundColor","colorScheme","colors","dark","white","transition","content","left","right","bottom","borderBottom","gray","scrolled","boxShadow","shadows","sm","classes","cx","setScrolled","rows","map","row","key","_id","verticalAlign","format","Date","createdAt","temperature","ScrollArea","onScrollPositionChange","y","Table","sx","minWidth","maxWidth","className","setPage","refetchOnMountOrArgChange","isLoading","curr","length"],"sourceRoot":""}