{"version":3,"file":"component---src-pages-index-js-4e4be483a3e5a1dea656.js","mappings":"4LAkBEA,E,MAZqBC,GAAAA,gBAAqB,CAC1CC,UAAW,SAACC,GAAD,MAAc,CACvBC,WAAYD,EAAQE,MAAM,CACxBA,MAAO,kBAAwB,CAC7BC,OAAQ,MACRC,IAAI,mBAFC,EAAGC,QAEL,SAFE,EAAYC,KAAZ,IAFA,IAWXT,mB,2BCdIU,GAAYC,EAAAA,EAAAA,IAAa,SAACC,GAAD,MAAY,CACzCC,OAAQ,CACNC,SAAU,SACVC,IAAK,EACLC,gBAAuC,SAAtBJ,EAAMK,YAAyBL,EAAMM,OAAOC,KAAK,GAAKP,EAAMQ,MAC7EC,WAAY,wBAEZ,WAAY,CACVC,QAAS,KACTR,SAAU,WACVS,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,aAAa,cACW,SAAtBd,EAAMK,YAAyBL,EAAMM,OAAOC,KAAK,GAAKP,EAAMM,OAAOS,KAAK,MAK9EC,SAAU,CACRC,UAAWjB,EAAMkB,QAAQC,IApBE,IAkD/B,EA1BoB,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KACrB,EAAwBtB,IAAhBuB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,GACjB,GAAgCC,EAAAA,EAAAA,WAAS,GAAlCP,EAAP,KAAiBQ,EAAjB,KAEMC,EAAOL,EAAKM,KAAI,SAACC,GAAD,OACpB,sBAAIC,IAAKD,EAAIE,KACX,0BAAKF,EAAIG,WACT,0BAAKH,EAAII,aAHS,IAOtB,OACE,gBAACC,EAAA,EAAD,CAAYC,GAAI,CAAEC,OAAQ,KAAOC,uBAAwB,gBAAGC,EAAH,EAAGA,EAAH,OAAWZ,EAAkB,IAANY,EAAvB,GACvD,gBAACC,EAAA,EAAD,CAAOJ,GAAI,CAAEK,SAAU,MACrB,yBAAOC,UAAWjB,EAAGD,EAAQpB,QAAT,OAAoBoB,EAAQL,UAAWA,EAAvC,KAClB,0BACE,uCACA,0CAGJ,6BAAQS,IAIf,ECtBD,EAzBa,WAAO,IAAD,EACjB,GAAwBF,EAAAA,EAAAA,UAAS,GAA1B1B,EAAP,KAAa2C,EAAb,KACO5C,GAAW2B,EAAAA,EAAAA,UAAS,IAA3B,GAEA,EAGInC,EAAmB,CACrBS,KAAAA,EACAD,QAAAA,IAJAwB,EADF,EACEA,KACAqB,EAFF,EAEEA,UAMF,OAAKrB,GAAQqB,EACJ,KAIP,2BACE,gBAAC,EAAD,CAAarB,KAAI,UAAEA,EAAKA,YAAP,QAAe,KAC/BvB,EAAO,EAAI,gBAAC6C,EAAA,EAAD,CAAQC,QAAS,kBAAMH,GAAQ,SAAAI,GAAI,OAAIA,EAAO,CAAX,GAAlB,GAAjB,SAAmE,KAC9ExB,EAAKA,KAAKyB,SAAWjD,EAAU,gBAAC8C,EAAA,EAAD,CAAQC,QAAS,kBAAMH,GAAQ,SAAAI,GAAI,OAAIA,EAAO,CAAX,GAAlB,GAAjB,SAAmE,KAGxG,C","sources":["webpack://bankehuset/./src/services/entries.js","webpack://bankehuset/./src/components/EntriesList/EntriesList.jsx","webpack://bankehuset/./src/pages/index.js"],"sourcesContent":["/**\n* Services -> Entries\n */\n\nimport base from './base';\n\nconst entriesService = base.injectEndpoints({\n  endpoints: (builder) => ({\n    getEntries: builder.query({\n      query: ({ perPage, page }) => ({\n        method: 'GET',\n        url: `entries?perPage=${perPage}&page=${page}`,\n      })\n    })\n  })\n})\n\nexport const {\n  useGetEntriesQuery\n} = entriesService;","\nimport React, { useState } from 'react';\nimport { createStyles, Table, ScrollArea } from '@mantine/core';\n\nconst useStyles = createStyles((theme) => ({\n  header: {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n    transition: 'box-shadow 150ms ease',\n\n    '&::after': {\n      content: '\"\"',\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      bottom: 0,\n      borderBottom: `1px solid ${\n        theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[2]\n      }`,\n    },\n  },\n\n  scrolled: {\n    boxShadow: theme.shadows.sm,\n  },\n}));\n\nconst EntriesList = ({ data }) => {\n  const { classes, cx } = useStyles();\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = data.map((row) => (\n    <tr key={row._id}>\n      <td>{row.createdAt}</td>\n      <td>{row.temperature}</td>\n    </tr>\n  ));\n\n  return (\n    <ScrollArea sx={{ height: 300 }} onScrollPositionChange={({ y }) => setScrolled(y !== 0)}>\n      <Table sx={{ minWidth: 700 }}>\n        <thead className={cx(classes.header, { [classes.scrolled]: scrolled })}>\n          <tr>\n            <th>Timestamp</th>\n            <th>Temperture</th>\n          </tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n\nexport default EntriesList;","import React, { useState } from 'react';\nimport { Button } from '@mantine/core';\nimport  { useGetEntriesQuery } from \"../services/entries\";\nimport EntriesList from \"../components/EntriesList\";\n\nconst Home = () => {\n  const [page, setPage] = useState(1);\n  const [perPage] = useState(50);\n\n  const {\n    data,\n    isLoading\n  } = useGetEntriesQuery({\n    page,\n    perPage,\n  });\n\n  if (!data || isLoading) {\n    return null;\n  }\n\n  return (\n    <div>\n      <EntriesList data={data.data ?? []} />\n      {page > 1 ? <Button onClick={() => setPage(curr => curr - 1)}>Newer</Button> : null}\n      {data.data.length === perPage ? <Button onClick={() => setPage(curr => curr + 1)}>Older</Button> : null}\n    </div>\n  )\n}\n\nexport default Home;\n"],"names":["useGetEntriesQuery","base","endpoints","builder","getEntries","query","method","url","perPage","page","useStyles","createStyles","theme","header","position","top","backgroundColor","colorScheme","colors","dark","white","transition","content","left","right","bottom","borderBottom","gray","scrolled","boxShadow","shadows","sm","data","classes","cx","useState","setScrolled","rows","map","row","key","_id","createdAt","temperature","ScrollArea","sx","height","onScrollPositionChange","y","Table","minWidth","className","setPage","isLoading","Button","onClick","curr","length"],"sourceRoot":""}